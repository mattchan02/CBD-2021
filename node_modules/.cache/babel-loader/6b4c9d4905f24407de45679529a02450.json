{"ast":null,"code":"var _jsxFileName = \"/Users/matthewchan02/Documents/gitHub/api-cbd-2021/src/ChoiceBar.js\";\nimport React from 'react';\nimport ChoiceBarStyles from './CSSFiles/ChoiceBarStyles.css';\nimport CardQuestion from \"./CardQuestion.js\";\nimport CardDatabase from \"./CardDatabase.js\";\nimport FourthSummary from './FourthSummary.js';\nimport RestartButton from \"./RestartButton.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass ChoiceBar extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      handleFirstQuestion: false,\n      handleStartingInfo: true,\n      handleCharacterQuestion: false,\n      handleWriterQuestion: false,\n      handleFourthSummary: false,\n      handleRenderDatabase: false,\n      characterChoice: false,\n      characterData: \"\",\n      writerChoice: false,\n      writerData: \"\",\n      randomChoice: false\n    };\n  }\n\n  handleFirstQuestion() {\n    console.log(\"Start Rendering First Question\");\n    this.setState({\n      handleFirstQuestion: true,\n      handleStartingInfo: false\n    }, () => {\n      console.log(this.state);\n    });\n  }\n\n  handleCharacterQuestion() {\n    console.log(\"Character Data Input Finished and moving to Run Question\");\n    this.setState({\n      handleCharacterQuestion: false,\n      handleRunQuestion: true\n    }, () => {\n      console.log(this.state);\n    });\n  }\n\n  handleWriterQuestion() {\n    console.log(\"Writer Data Input Finished and moving on\");\n    this.setState({\n      writerChoice: false,\n      handleFourthSummary: true\n    }, () => {\n      console.log(this.state);\n    });\n  }\n\n  characterChoice() {\n    console.log(\"Character Choice Acknowledged at Parent\");\n    this.setState({\n      characterChoice: true,\n      handleFirstQuestion: false,\n      handleCharacterQuestion: true\n    }, () => {\n      console.log(this.state);\n    });\n  }\n\n  writerChoice() {\n    console.log(\"Writer Choice Acknowledged at Parent\");\n    this.setState({\n      writerChoice: true,\n      handleFirstQuestion: false,\n      handleWriterQuestion: true\n    }, () => {\n      console.log(this.state);\n    });\n  }\n\n  characterDataUpdate(characterData) {\n    console.log(\"Character Data update from SecondQuestionCharacter component\");\n    this.setState({\n      characterData: characterData\n    }, () => {\n      console.log(this.state);\n    });\n  }\n\n  writerDataUpdate(writerData) {\n    console.log(\"Writer Data Update from SecondQuestionWriter component\");\n    this.setState({\n      writerData: writerData\n    }, () => {\n      console.log(this.state);\n    });\n  }\n\n  restartAllQuestions() {\n    console.log(\"Reset All States\");\n    this.setState({\n      handleFirstQuestion: false,\n      handleStartingInfo: true,\n      handleCharacterQuestion: false,\n      handleWriterQuestion: false,\n      handleFourthSummary: false,\n      handleRenderDatabase: false,\n      characterChoice: false,\n      characterData: \"\",\n      writerChoice: false,\n      writerData: \"\",\n      randomChoice: false\n    }, () => {\n      console.log(this.state);\n    });\n  }\n\n  handleRenderDatabase() {\n    console.log(\"All filters done. Rendering Database\");\n    this.setState({\n      handleRenderDatabase: true,\n      handleFourthSummary: false\n    }, () => {\n      console.log(this.state);\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"center\", {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \" Comic Book Recommendation 2.0 (Marvel)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              display: !this.state.handleStartingInfo ? \"none\" : \"block\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              children: [\" Want something to read? \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 129,\n                columnNumber: 48\n              }, this), \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 129,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              class: \"ChoiceBarIntro\",\n              children: \" Try something from Matthew's curated list \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 130,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              class: \"StartButton\",\n              onClick: this.handleFirstQuestion,\n              children: \"Start!\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 131,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\" Note: \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 136,\n                columnNumber: 29\n              }, this), \"2.0 is refactored code to showcase API proficiency. \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 137,\n                columnNumber: 75\n              }, this), \"However, this requires various changes to what is recommended.\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 136,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 17\n          }, this), this.state.handleFirstQuestion ? /*#__PURE__*/_jsxDEV(FirstQuestionBox, {\n            characterChoice: this.characterChoice,\n            companyChoice: this.companyChoice,\n            writerChoice: this.writerChoice\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 19\n          }, this) : null, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nclass FirstQuestionBox extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      characterStatus: \"false\",\n      writerStatus: \"false\"\n    };\n    this.characterStatus = this.characterStatus.bind(this);\n    this.writerStatus = this.writerStatus.bind(this);\n  }\n\n  characterStatus() {\n    console.log(\"Character Chosen Button\");\n    this.setState({\n      characterStatus: true,\n      writerStatus: false\n    }, () => {\n      console.log(this.state);\n    });\n    console.log(this.state);\n  }\n\n  companyStatus() {\n    console.log(\"Company Chosen Button\");\n    this.setState({\n      characterStatus: false,\n      writerStatus: false\n    }, () => {\n      console.log(this.state);\n    });\n    console.log(this.state);\n  }\n\n  writerStatus() {\n    console.log(\"Writer Chosen Button\");\n    this.setState({\n      characterStatus: false,\n      companyStatus: false,\n      writerStatus: true\n    }, () => {\n      console.log(this.state);\n    });\n    console.log(this.state);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"FirstQuestionBoxCharacterStyles\",\n        style: {\n          display: this.state.characterStatus ? \"block\" : \"none\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(CardQuestion, {\n          title: \"Character\",\n          text: \"Do you want to search by character?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: this.props.characterChoice,\n          children: \" Choose By Character \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"FirstQuestionBoxWriterStyles\",\n        style: {\n          display: this.state.writerStatus ? \"block\" : \"none\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(CardQuestion, {\n          title: \"Writer\",\n          text: \"Do you want to search by writer?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: this.props.writerChoice,\n          children: \" Choose By Writer \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default ChoiceBar;","map":{"version":3,"sources":["/Users/matthewchan02/Documents/gitHub/api-cbd-2021/src/ChoiceBar.js"],"names":["React","ChoiceBarStyles","CardQuestion","CardDatabase","FourthSummary","RestartButton","ChoiceBar","Component","constructor","props","state","handleFirstQuestion","handleStartingInfo","handleCharacterQuestion","handleWriterQuestion","handleFourthSummary","handleRenderDatabase","characterChoice","characterData","writerChoice","writerData","randomChoice","console","log","setState","handleRunQuestion","characterDataUpdate","writerDataUpdate","restartAllQuestions","render","display","companyChoice","FirstQuestionBox","characterStatus","writerStatus","bind","companyStatus"],"mappings":"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","sourcesContent":["import React from 'react'\nimport ChoiceBarStyles from './CSSFiles/ChoiceBarStyles.css'\nimport CardQuestion from \"./CardQuestion.js\"\nimport CardDatabase from \"./CardDatabase.js\"\nimport FourthSummary from './FourthSummary.js'\nimport RestartButton from \"./RestartButton.js\"\n\nclass ChoiceBar extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      handleFirstQuestion: false,\n      handleStartingInfo: true,\n      handleCharacterQuestion: false,\n      handleWriterQuestion: false,\n      handleFourthSummary: false,\n      handleRenderDatabase: false,\n      characterChoice: false,\n      characterData: \"\",\n      writerChoice: false,\n      writerData: \"\",\n      randomChoice: false,\n    };\n  };\n\n  handleFirstQuestion() {\n    console.log(\"Start Rendering First Question\")\n    this.setState({\n      handleFirstQuestion: true,\n      handleStartingInfo: false\n      }, () => {console.log(this.state);\n    });\n  }\n\n  handleCharacterQuestion() {\n    console.log(\"Character Data Input Finished and moving to Run Question\")\n    this.setState({\n      handleCharacterQuestion: false,\n      handleRunQuestion: true\n      }, () => {console.log(this.state);\n    });\n  }\n\n  handleWriterQuestion() {\n    console.log(\"Writer Data Input Finished and moving on\")\n    this.setState({\n      writerChoice: false,\n      handleFourthSummary: true\n    }, () => {console.log(this.state);\n    })\n  }\n\n  characterChoice() {\n    console.log(\"Character Choice Acknowledged at Parent\")\n    this.setState({\n      characterChoice: true,\n      handleFirstQuestion: false,\n      handleCharacterQuestion: true\n      }, () => {console.log(this.state);\n    });\n  }\n\n  writerChoice() {\n    console.log(\"Writer Choice Acknowledged at Parent\")\n    this.setState({\n      writerChoice: true,\n      handleFirstQuestion: false,\n      handleWriterQuestion: true\n      }, () => {console.log(this.state);\n    });\n  }\n\n  characterDataUpdate(characterData) {\n    console.log(\"Character Data update from SecondQuestionCharacter component\")\n    this.setState({\n      characterData: characterData\n    }, () => {console.log(this.state);\n    });\n  }\n\n  writerDataUpdate(writerData) {\n    console.log(\"Writer Data Update from SecondQuestionWriter component\")\n    this.setState({\n      writerData: writerData\n    }, () => {console.log(this.state);\n    })\n  }\n\n  restartAllQuestions() {\n    console.log(\"Reset All States\")\n    this.setState({\n      handleFirstQuestion: false,\n      handleStartingInfo: true,\n      handleCharacterQuestion: false,\n      handleWriterQuestion: false,\n      handleFourthSummary: false,\n      handleRenderDatabase: false,\n      characterChoice: false,\n      characterData: \"\",\n      writerChoice: false,\n      writerData: \"\",\n      randomChoice: false,\n      }, () => {console.log(this.state);\n    })\n  }\n\n  handleRenderDatabase() {\n    console.log(\"All filters done. Rendering Database\")\n    this.setState({\n      handleRenderDatabase: true,\n      handleFourthSummary: false\n      }, () => {console.log(this.state);\n    })\n  }\n\n  render() {\n    return (\n      <div>\n        <center>\n            <div>\n              <h1> Comic Book Recommendation 2.0 (Marvel)</h1>\n                <div\n                  style={{\n                    display: !this.state.handleStartingInfo\n                      ? \"none\"\n                      : \"block\"\n                        }}\n                      >\n                  <h2> Want something to read? <br></br> </h2>\n                  <p class=\"ChoiceBarIntro\"> Try something from Matthew's curated list </p>\n                    <button class=\"StartButton\"\n                      onClick={this.handleFirstQuestion}\n                      >\n                      Start!\n                    </button>\n                  <p> Note: <br></br>\n                      2.0 is refactored code to showcase API proficiency. <br></br>\n                      However, this requires various changes to what is recommended.\n                  </p>\n                </div>\n              {this.state.handleFirstQuestion\n                ? <FirstQuestionBox\n                    characterChoice = {this.characterChoice}\n                    companyChoice = {this.companyChoice}\n                    writerChoice = {this.writerChoice}\n                    />\n                : null}\n              <br></br>\n            </div>\n        </center>\n      </div>\n    )\n  }\n}\n\nclass FirstQuestionBox extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      characterStatus: \"false\",\n      writerStatus: \"false\"\n    };\n    this.characterStatus = this.characterStatus.bind(this)\n    this.writerStatus = this.writerStatus.bind(this)\n  }\n\n  characterStatus() {\n    console.log(\"Character Chosen Button\")\n    this.setState({\n      characterStatus: true,\n      writerStatus: false\n      }, () => {console.log(this.state);\n      });\n    console.log(this.state)\n  }\n\n  companyStatus() {\n    console.log(\"Company Chosen Button\")\n    this.setState({\n      characterStatus: false,\n      writerStatus: false\n      }, () => {console.log(this.state);\n      });\n    console.log(this.state)\n  }\n\n  writerStatus() {\n    console.log(\"Writer Chosen Button\")\n    this.setState({\n      characterStatus: false,\n      companyStatus: false,\n      writerStatus: true\n      }, () => {console.log(this.state);\n      });\n    console.log(this.state)\n  }\n\n  render() {\n    return(\n      <div>\n        <div\n          className=\"FirstQuestionBoxCharacterStyles\"\n          style={{\n            display: this.state.characterStatus\n              ? \"block\"\n              : \"none\"\n                }}\n          >\n          <CardQuestion\n            title=\"Character\"\n            text=\"Do you want to search by character?\"\n            />\n          <button onClick={this.props.characterChoice}> Choose By Character </button>\n        </div>\n\n        <div\n          className=\"FirstQuestionBoxWriterStyles\"\n          style={{\n            display: this.state.writerStatus\n              ? \"block\"\n              : \"none\"\n                }}>\n          <CardQuestion\n            title=\"Writer\"\n            text=\"Do you want to search by writer?\"\n            />\n          <button onClick={this.props.writerChoice}> Choose By Writer </button>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default ChoiceBar;\n"]},"metadata":{},"sourceType":"module"}